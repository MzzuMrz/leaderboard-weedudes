@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-rgb: 0, 0, 0;
}

body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
  font-family: monospace;
  overflow: hidden;
}

/* Animaci贸n de glitch */
@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-5px, 5px);
  }
  40% {
    transform: translate(-5px, -5px);
  }
  60% {
    transform: translate(5px, 5px);
  }
  80% {
    transform: translate(5px, -5px);
  }
  100% {
    transform: translate(0);
  }
}

/* Animaci贸n de texto parpadeante */
@keyframes textFlicker {
  0%,
  19%,
  21%,
  23%,
  25%,
  54%,
  56%,
  100% {
    text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #0fa, 0 0 80px #0fa, 0 0 90px #0fa, 0 0 100px #0fa,
      0 0 150px #0fa;
  }
  20%,
  24%,
  55% {
    text-shadow: none;
  }
}

/* Animaci贸n de pixelaci贸n */
@keyframes pixelate {
  0% {
    filter: none;
  }
  50% {
    filter: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg"><filter id="pixelate"><feFlood x="4" y="4" height="2" width="2"/><feComposite width="10" height="10"/><feTile result="a"/><feComposite in="SourceGraphic" in2="a" operator="in"/><feMorphology operator="dilate" radius="5"/></filter></svg>#pixelate');
  }
  100% {
    filter: none;
  }
}

@layer utilities {
  .animate-glitch {
    animation: glitch 0.2s infinite;
  }

  .animate-text-flicker {
    animation: textFlicker 1.5s infinite alternate;
  }

  .animate-pixelate {
    animation: pixelate 0.5s;
  }
}
